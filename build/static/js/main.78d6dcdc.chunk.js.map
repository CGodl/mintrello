{"version":3,"sources":["images/Mintrello-Butler.gif","images/splashfiller1.png","images/splashfiller2.png","images/buter-pocket.jpg","components/card/card_show.jsx","components/modal/modal_actions.js","components/modal/modal.jsx","components/nav/navbar.jsx","components/splash/splashPage.jsx","components/card/card.jsx","components/card/card_form.jsx","components/column/column.jsx","database/initial_data.js","components/column/column_form.jsx","components/dashboard/dashboard.jsx","components/App.js","components/root.js","components/reducers/modal_reducer.js","components/reducers/root_reducer.js","components/store/store.js","index.js"],"names":["module","exports","CardShow","props","state","id","card","title","description","update","bind","handleClick","deleteCard","field","e","setState","currentTarget","value","event","this","closeModal","editCard","removeCard","column","titleBlock","className","icon","faPencilAlt","spellCheck","defaultValue","onChange","onClick","faTimes","descriptionBlock","faAlignJustify","placeholder","React","Component","connect","dispatch","type","modal","component","item","stopPropagation","Navbar","SplashPage","src","butler","alt","href","splashImageOne","splashImageTwo","butlerPocket","Card","draggableId","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","openShowModal","openModal","CardForm","cardLength","handleSubmit","preventDefault","onSubmit","disabled","Column","cardIds","deleteColumn","target","editColumn","removeColumn","onBlur","droppableId","droppableProps","cards","map","key","addCard","Object","keys","totalCards","length","initialData","columns","columnOrder","ColumnForm","columnLength","DashBoard","addColumn","newState","concat","localStorage","setItem","JSON","stringify","newOrder","filter","newColumns","assign","cardId","columnId","newCards","newCardIds","onDragEnd","result","destination","source","newColumnOrder","Array","from","splice","start","finish","newColumn","startCardIds","newStart","finishCardIds","newFinish","data","direction","getItem","parse","App","exact","path","Dashboard","Root","store","modalReducer","action","freeze","rootReducer","combineReducers","configureStore","preloadedState","createStore","applyMiddleware","thunk","document","addEventListener","root","getElementById","window","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.78d6dcdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mintrello-Butler.39efeebc.gif\";","module.exports = __webpack_public_path__ + \"static/media/splashfiller1.ee384d2f.png\";","module.exports = __webpack_public_path__ + \"static/media/splashfiller2.5c7153b6.png\";","module.exports = __webpack_public_path__ + \"static/media/buter-pocket.824b9f8c.jpg\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faPencilAlt,\n  faAlignJustify,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { closeModal } from \"../modal/modal_actions\";\n\nconst mdtp = (dispatch) => {\n  return {\n    closeModal: () => dispatch(closeModal()),\n  };\n};\n\nclass CardShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.card.id,\n      title: this.props.card.title,\n      description: this.props.card.description,\n    };\n    this.update = this.update.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.deleteCard = this.deleteCard.bind(this)\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.currentTarget.value });\n    };\n  }\n\n  handleClick(event) {\n    this.props.closeModal();\n    this.props.editCard(this.state);\n  }\n\n  deleteCard() {\n    this.props.removeCard(this.props.column, this.props.card)\n    this.props.closeModal();\n  }\n\n  render() {\n    const titleBlock = (\n      <div className=\"card-title-container\">\n        <span className=\"card-title-icon\" id=\"card-show-icons\">\n          <FontAwesomeIcon icon={faPencilAlt} />\n        </span>\n        <textarea\n          className=\"card-title-editor\"\n          spellCheck=\"false\"\n          defaultValue={this.state.title}\n          // value={this.state.title}\n          onChange={this.update(\"title\")}\n        />\n        <span className=\"card-show-close\" onClick={this.handleClick}>\n          <FontAwesomeIcon icon={faTimes} />\n        </span>\n        <div className=\"card-show-listname\">\n          <p>In Column</p>\n        </div>\n      </div>\n    );\n\n    const descriptionBlock = (\n      <div className=\"card-description\">\n        <div className=\"card-description-top\">\n          <span className=\"card-desc-icon\" id=\"card-show-icons\">\n            <FontAwesomeIcon icon={faAlignJustify} />\n          </span>\n          <h3>Description</h3>\n        </div>\n        <textarea\n          className=\"card-description-editor\"\n          defaultValue={this.state.description}\n          // value={this.state.description}\n          onChange={this.update(\"description\")}\n          placeholder=\"Click here to add a description...\"\n          spellCheck=\"false\"\n        ></textarea>\n      </div>\n    );\n\n    return (\n      <div className=\"card-show\">\n        <div className=\"card-show-title\"> {titleBlock} </div>\n        <div className=\"card-show-desc\"> {descriptionBlock} </div>\n        <button onClick={this.deleteCard}> Delete Card</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mdtp)(CardShow);\n","export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const openModal = (type, item) => ({\n  type: OPEN_MODAL,\n  modal: {\n    type,\n    item,\n  },\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n});\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"./modal_actions\";\nimport CardShow from \"../card/card_show\";\nimport \"./modal.css\";\n\nconst Modal = ({ modal, closeModal }) => {\n  if (!modal) {\n    return null;\n  }\n  let component;\n  switch (modal.type) {\n    case \"show-card\":\n      component = <CardShow card={modal.item[0]} editCard={modal.item[1]} removeCard={modal.item[2]} column={modal.item[3]} />;\n      break;\n    default:\n      return null;\n  }\n\n  return (\n    <div className={`modal-background`}>\n      <div className=\"modal-child\" onClick={(e) => e.stopPropagation()}>\n        {component}\n      </div>\n    </div>\n  );\n};\n\nconst msp = (state) => {\n  return {\n    modal: state.modal,\n  };\n};\n\nconst mdp = (dispatch) => {\n  return {\n    closeModal: () => dispatch(closeModal()),\n  };\n};\n\nexport default connect(msp, mdp)(Modal);\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nclass Navbar extends React.Component {\n  render() {\n\n\n    return (\n      <nav className='navbar-container'>\n        <h3>Mintrello</h3>\n      </nav>\n    )\n\n  }\n};\n\nexport default Navbar;\n\n\n\n","import React from 'react';\nimport Navbar from '../nav/navbar';\nimport butler from \"../../images/Mintrello-Butler.gif\";\nimport splashImageOne from '../../images/splashfiller1.png';\nimport splashImageTwo from '../../images/splashfiller2.png';\nimport butlerPocket from '../../images/buter-pocket.jpg';\n// import { Link } from 'react-router-dom';\n\nclass SplashPage extends React.Component {\n\n  render() {\n    \n    return (\n      <div className='splash-page-container'>\n        <header><Navbar/></header>\n        <div className='splash-page-top'>\n          <img className ='butler-gif' src={butler} alt=\"The Butler is missing :O\" />\n          <div className='splash-page-main-words'>\n            <h1>Mintrello</h1>\n            <p>Keep project planning sweet and simple</p>\n            <ul className='start-buttons-container'>\n              <li><button className='left-start-btn'>Tutorial</button></li>\n              <li><a href=\"#/dashboard\"><button className='right-start-btn'>Get Started</button></a></li>\n            </ul>\n          </div>\n        </div>\n        <ul className='splash-page-body'>\n          <li>\n            <h1>Track\n              <br />\n              <p>With Mintrello you don't have to worry about losing track of project status. \n                  Keep up on current tasks with Mintrello's project board. Break up projects in to smaller pieces with cards. </p>\n            </h1>\n            \n            <img src={splashImageOne} alt=\"I'm missing :O\" />\n          </li>\n          <li>\n          <h1>Complete\n            <br />\n              <p>Complete, delete, forget. \n                Mintrello's emphasis on a minimalist structure ensures the only visible projects are the ones you still need to complete.\n\n              </p>\n          </h1>\n          <img src={splashImageTwo} alt=\"I'm missing :O\" />\n\n\n          </li>\n          <li>\n          <h1>Take anywhere\n            <br />\n              <p>With Mintrello you keep track of projects on your PC or your mobile. \n                Mintrello's design ensures a clean interface no matter your screen size.   </p>\n          </h1>\n          <img className='butler-pocket' src={butlerPocket} alt=\"I'm missing :O\" />\n\n\n          </li>\n        </ul>\n        {/* <div className='second-test-footer'>\n          Whipped up by\n        </div> */}\n\n\n\n\n        <footer>\n          Whipped up by: Carl Godlewski, Louis Velazquez, and Ricky Zheng for the Mintbean Hackathon\n        </footer>\n      </div>\n    )\n\n  }\n\n\n  \n\n};\n\n\nexport default SplashPage;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../modal/modal_actions\";\n\nconst mdtp = (dispatch) => {\n  return {\n    openShowModal: (item) => dispatch(openModal(\"show-card\", item)),\n  };\n};\n\nclass Card extends React.Component {\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.card.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className=\"card-container\"\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <div\n              onClick={() =>\n                this.props.openShowModal([this.props.card, this.props.editCard, this.props.removeCard, this.props.column ])\n              }\n            >\n              <span id={\"card-item-title\"}>{this.props.card.title}</span>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default connect(null, mdtp)(Card);\n","import React from \"react\";\n\nclass CardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: `card-${this.props.cardLength}`,\n      title: \"\",\n      description: \"\",\n    };\n\n    this.update = this.update.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.currentTarget.value });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit((this.props.column),\n    { id: `card-${this.props.cardLength}`,\n      title: this.state.title,\n      description: \"\",\n    });\n\n    this.setState({ \n      title: \"\",\n   });\n  }\n\n  render() {\n    return (\n      <div className=\"card-form-container\">\n        <form onSubmit={this.handleSubmit} className=\"card-form\">\n          <input\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.update(\"title\")}\n            className=\"card-input-title\"\n            placeholder=\"Enter Card Title\"\n          />\n\n          <input\n            type=\"submit\"\n            value=\"+Add Card\"\n            disabled={!this.state.title}\n            className=\"card-input-submit\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CardForm;\n","import React from \"react\";\nimport Card from \"../card/card\";\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport CardForm from \"../card/card_form\"\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.column.id,\n      title: this.props.column.title,\n      cardIds: this.props.column.cardIds,\n    };\n    this.update = this.update.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.deleteColumn = this.deleteColumn.bind(this);\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.target.value });\n    };\n  }\n\n  handleClick(e) {\n    this.props.editColumn(this.state);\n  }\n\n  deleteColumn() {\n    this.props.removeColumn(this.props.column)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n        {(provided) => (\n          <div\n            className=\"column-container\"\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n          >\n            <div className=\"column-item-header\" {...provided.dragHandleProps}>\n              <textarea\n                className=\"list-name-editor\"\n                onBlur={this.handleClick}\n                onChange={this.update(\"title\")}\n                defaultValue={this.props.column.title}\n              ></textarea>\n            </div>\n\n            <Droppable droppableId={this.props.column.id}>\n              {(provided, snapshot) => (\n                <div\n                  className=\"column-card-container\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {this.props.cards.map((card, index) => (\n                    <Card\n                      key={card.id}\n                      card={card}\n                      column={this.props.column}\n                      index={index}\n                      editCard={this.props.editCard}\n                      removeCard={this.props.removeCard}\n                    />\n                  ))}\n                  {provided.placeholder}\n\n                  <CardForm\n                    column={this.props.column}\n                    onSubmit={this.props.addCard}\n                    cards={this.props.cards}\n                    cardLength={Object.keys(this.props.totalCards).length + 1}\n                  />\n                  <button onClick={this.deleteColumn}>\n                    Remove Column\n                  </button>\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default Column;\n","const initialData = {\n  cards: {\n    \"card-1\": {\n      id: \"card-1\",\n      title: \"Trashing\",\n      description: \"Take out the garbage\",\n    },\n    \"card-2\": {\n      id: \"card-2\",\n      title: \"Watching\",\n      description: \"Watch my favorite show\",\n    },\n    \"card-3\": {\n      id: \"card-3\",\n      title: \"Charging\",\n      description: \"Charge my phone\",\n    },\n    \"card-4\": {\n      id: \"card-4\",\n      title: \"Cooking\",\n      description: \"Cook Dinner\",\n    },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      cardIds: [\"card-1\", \"card-2\", \"card-3\", \"card-4\"],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      cardIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Done\",\n      cardIds: [],\n    },\n  },\n  // Facilitate reordering of the columns\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n};\n\nexport default initialData","import React from \"react\";\n\nclass ColumnForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: `column-${this.props.columnLength}`,\n      title: \"\",\n      cardIds: [],\n    };\n\n    this.update = this.update.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.currentTarget.value });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit({\n      id: `column-${this.props.columnLength}`,\n      title: this.state.title,\n      cardIds: [],\n    });\n\n    this.setState({ title: \"\" });\n  }\n\n  render() {\n    return (\n      <div className=\"list-form-container\">\n        <form onSubmit={this.handleSubmit} className=\"list-form\">\n          <input\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.update(\"title\")}\n            className=\"list-input-title\"\n            placeholder=\"Enter Column Title...\"\n          />\n\n          <input\n            type=\"submit\"\n            value=\"+Add Column\"\n            disabled={!this.state.title}\n            className=\"list-input-submit\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ColumnForm;\n","import React from \"react\";\nimport Column from \"../column/column\";\nimport initialData from \"../../database/initial_data\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport ColumnForm from \"../column/column_form\";\n// import { withRouter } from \"react-router\";\n\nconst mstp = () => {\n  let data;\n  if (localStorage.getItem(\"state\") != null) {\n    data = JSON.parse(localStorage.getItem(\"state\"));\n  } else {\n    data = initialData;\n  }\n\n  return {\n    data: data,\n  };\n};\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.data;\n    localStorage.setItem(\"state\", JSON.stringify(this.state));\n  }\n  // JSON.parse(localStorage.getItem('state'))\n\n  // Adding Columns\n  addColumn = (column) => {\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [column.id]: column,\n      },\n      columnOrder: this.state.columnOrder.concat(column.id),\n    };\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  };\n\n  editColumn = (column) => {\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [column.id]: column,\n      },\n    }\n\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  }\n\n  removeColumn = (column) => {\n    const newOrder = this.state.columnOrder.filter(item => item !== column.id)\n    let newColumns = Object.assign({}, this.state.columns);\n    delete newColumns[column]\n\n    const newState = {\n      ...this.state,\n      columns: newColumns,\n      columnOrder: newOrder,\n    };\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  }\n\n  // Adding Cards\n  addCard = (column, card) => {\n    const newState = {\n      ...this.state,\n      cards: {\n        ...this.state.cards,\n        [card.id]: card,\n      },\n      columns: {\n        ...this.state.columns,\n        [column.id]: {\n          ...column,\n          cardIds: this.state.columns[column.id].cardIds.concat(card.id),\n        },\n      },\n    };\n\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  };\n\n  editCard = (card) => {\n    const newState = {\n      ...this.state,\n      cards: {\n        ...this.state.cards,\n        [card.id]: card,\n      },\n    }\n\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  }\n\n  removeCard = (column, card) => {\n    let cardId = card.id, columnId = column.id;\n\n    let newCards = Object.assign({}, this.state.cards);\n    delete newCards[card]\n\n    const newCardIds = this.state.columns[columnId].cardIds.filter(item => item !== cardId)\n\n    const newState = {\n      ...this.state,\n      cards: newCards,\n      columns: {\n        ...this.state.columns,\n        [columnId]: {\n          ...column,\n          cardIds: newCardIds,\n        }\n      },\n    };\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  }\n\n  // Drag and Drop Function\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === \"column\") {\n      const newColumnOrder = Array.from(this.state.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...this.state,\n        columnOrder: newColumnOrder,\n      };\n      this.setState(newState);\n      localStorage.setItem(\"state\", JSON.stringify(newState));\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newCardIds = Array.from(start.cardIds);\n      newCardIds.splice(source.index, 1);\n      newCardIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        cardIds: newCardIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      localStorage.setItem(\"state\", JSON.stringify(newState));\n      return;\n    }\n\n    //Moving from one list to another\n    const startCardIds = Array.from(start.cardIds);\n    startCardIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      cardIds: startCardIds,\n    };\n\n    const finishCardIds = Array.from(finish.cardIds);\n    finishCardIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      cardIds: finishCardIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    this.setState(newState);\n    localStorage.setItem(\"state\", JSON.stringify(newState));\n  };\n\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable\n            droppableId=\"all-columns\"\n            direction=\"horizontal\"\n            type=\"column\"\n          >\n            {(provided) => (\n              <div\n                className=\"dashboard-container\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {this.state.columnOrder.map((columnId, index) => {\n                  const column = this.state.columns[columnId];\n                  const cards = column.cardIds.map(\n                    (cardId) => this.state.cards[cardId]\n                  );\n\n                  return (\n                    <Column\n                      key={column.id}\n                      column={column}\n                      columnOrder={this.state.columnOrder}\n                      cards={cards}\n                      totalCards={this.state.cards}\n                      index={index}\n                      addCard={this.addCard}\n                      editCard={this.editCard}\n                      removeCard={this.removeCard}\n                      editColumn={this.editColumn}\n                      removeColumn={this.removeColumn}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n\n                <ColumnForm\n                  onSubmit={this.addColumn}\n                  columns={this.state.columns}\n                  columnLength={this.state.columnOrder.length + 1}\n                  columnOrder={this.state.columnOrder}\n                />\n              </div>\n            )}\n          </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default connect(mstp, null)(DashBoard);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Modal from \"./modal/modal\";\nimport SplashPage from \"./splash/splashPage\";\nimport Dashboard from \"./dashboard/dashboard\";\nimport \"../styles/index.scss\";\n\nconst App = () => {\n  return (\n    <div>\n      <Modal />\n      <Switch>\n        <Route exact path=\"/\" component={SplashPage} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;\n","import { OPEN_MODAL, CLOSE_MODAL } from \"../modal/modal_actions\";\n\nconst modalReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case OPEN_MODAL:\n      return action.modal;\n    case CLOSE_MODAL:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import { combineReducers } from \"redux\";\nimport modalReducer from \"./modal_reducer\";\n\nconst rootReducer = combineReducers({\n  modal: modalReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/root_reducer\";\n// import logger from \"redux-logger\";\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(rootReducer, preloadedState, applyMiddleware(thunk))\n);\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./components/root\";\nimport configureStore from \"./components/store/store\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = document.getElementById(\"root\");\n  let store = configureStore();\n  window.getState = store.getState;\n  ReactDOM.render(<Root store={store} />, root);\n});\n"],"sourceRoot":""}